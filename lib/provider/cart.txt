import "package:flutter/foundation.dart";

class CartItem {
  final String id;
  final String food;
  final int quantity;
  final double price;

  CartItem({
    required this.id,
    required this.food,
    required this.quantity,
    required this.price,
  });
}

class Cart with ChangeNotifier {
  Map<String, CartItem> _items = {};

  Map<String, CartItem> get items {
    return {
      ...items
    };
  }

  int get itemsCount {
    return _items.length;
  }

  // void removeItem(String productId) {
  //   if (!_items.containsKey(productId)) {
  //     return;
  //   }

  //   if (_items[productId]!.quantity > 1) {
  //     _items.update(
  //         productId,
  //         (existingCartItem) => CartItem(
  //               id: existingCartItem.id,
  //               food: existingCartItem.food,
  //               price: existingCartItem.price,
  //               quantity: existingCartItem.quantity - 1,
  //             ));
  //   } else {
  //     _items.remove(productId);
  //   }
  //   notifyListeners();
  // }

  // void addItem(
  //   String foodId,
  //   double price,
  //   String food,
  // ) {
  //   if (_items.containsKey(foodId)) {
  //     // change quantity...
  //     _items.update(
  //       foodId,
  //       (existingCartItem) => CartItem(
  //         id: existingCartItem.id,
  //         food: existingCartItem.food,
  //         price: existingCartItem.price,
  //         quantity: existingCartItem.quantity + 1,
  //       ),
  //     );
  //   } else {
  //     _items.putIfAbsent(
  //       foodId,
  //       () => CartItem(
  //         id: foodId,
  //         food: food,
  //         price: price,
  //         quantity: 1,
  //       ),
  //     );
  //   }
  //   notifyListeners();
  // }

  int get cartItemCount {
    var total = 0;
    _items.forEach(
      (key, cartItem) {
        total += cartItem.quantity;
      },
    );

    return total;
  }

  int itemNumber(String id) {
    var total = 0;
    _items.forEach(
      (key, cartItem) {
        if (id == cartItem.id) {
          total = cartItem.quantity;
        }
      },
    );
    return total;
  }

  double get totalAmount {
    var total = 0.0;
    _items.forEach(
      (key, cartItem) {
        total += cartItem.price * cartItem.quantity;
      },
    );
    return total;
  }
}
